{"version":3,"sources":["TomatoComponent/Tomato.js","AppComponent/App.js","serviceWorker.js","index.js"],"names":["TomatoComponent","onPlayPauseClick","_this","timePos","ringSound","stop","onStopClick","paused","forceUpdate","jumpToMode","onMouseUp","isDragging","onMouseDown","event","preventDefault","touches","posX","pageX","oldPosX","lastTurnPos","onMouseMove","moveX","pixelPos","Math","max","min","pixelWidth","ceil","minutesWidth","timeMultiplier","turnSoundDist","turnSound","play","isTickPlaying","lastTick","Date","now","mode","MODE_POMODORO","showWhatIsPomodoroChip","showWDontLockDeviceChip","showWDontLockDeviceCard","doTick","setTimeout","tickDuration","tickSound","volume","props","getConfig","tickSoundConfig","setPos","multiplier","MODE_SHORT_BREAK","MODE_LONG_BREAK","selectMode","hideHelpChip","hideDontLockDeviceChip","showDontLockDeviceCard","hideDontLockDeviceCard","sendMail","window","open","this","context","onSetTitle","loadSounds","Howl","src","loop","_this2","react_default","a","createElement","lib","className","col","onClose","href","target","onClick","shadow","style","margin","expand","marginTop","border","colored","onTouchMove","onTouchEnd","ref","display","id","d","xmlns","viewBox","xlinkHref","onTouchStart","transform","concat","ripple","name","float","Component","contextTypes","PropTypes","func","isRequired","MODE_CUSTOM","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onTickSoundConfigChange","e","setState","value","onGetConfig","state","handleToggleDialog","openDialog","handleCloseDialog","emptyFunction","onSetMeta","onPageNotFound","shareUrl","error","fixedDrawer","transparent","version","childContainer","onChange","FacebookShareButton","url","FacebookIcon","round","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","RedditShareButton","RedditIcon","PinterestShareButton","media","PinterestIcon","EmailShareButton","EmailIcon","TomatoComponent_Tomato","childContextTypes","Boolean","location","hostname","match","ReactDOM","render","src_AppComponent_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.092c5b89.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport s from './Tomato.scss';\nimport { Howl } from 'howler';\nimport { FABButton, Icon, Button, Grid, Cell, Chip, Card, CardActions, CardTitle } from 'react-mdl';\n\nconst title = 'Zen Pomodoro';\n\nclass TomatoComponent extends Component {\n\n  static contextTypes = {\n    onSetTitle: PropTypes.func.isRequired,\n  };\n\n  static propTypes = {\n    getConfig: PropTypes.func.isRequired,\n  };\n\n  static MODE_POMODORO = 0; // 25 minutes\n  static MODE_SHORT_BREAK = 1; // 5 minutes\n  static MODE_LONG_BREAK = 2; // 15 minutes\n  static MODE_CUSTOM = 3; // User selected\n\n  componentWillMount() {\n    this.context.onSetTitle(title);\n  }\n\n  componentDidMount() {\n    this.loadSounds();\n    this.doTick();\n  }\n\n  onPlayPauseClick = () => {\n    if (this.timePos === 0) {\n      this.ringSound.stop();\n      this.onStopClick();\n    }\n    this.paused = !this.paused;\n    this.forceUpdate();\n  };\n\n  onStopClick = () => {\n    this.jumpToMode();\n    this.paused = true;\n    this.ringSound.stop();\n    this.forceUpdate();\n  };\n\n  onMouseUp = () => {\n    this.isDragging = false;\n  };\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n\n    if (event.touches) { // Only for touch interfaces\n      const posX = event.touches[0].pageX;\n      this.oldPosX = posX;\n      this.lastTurnPos = posX;\n    }\n\n    this.isDragging = true;\n  };\n\n  onMouseMove = (event) => {\n    event.preventDefault();\n\n    // Detects wether the event comes from a mouse or a touch\n    const posX = !event.touches ? event.pageX : event.touches[0].pageX;\n\n    if (this.isDragging) {\n      // Moves the timeline according to the user's drag motion\n      const moveX = posX - this.oldPosX;\n      this.pixelPos -= moveX;\n      this.pixelPos = Math.max(0, Math.min(this.pixelPos, this.pixelWidth));\n      this.timePos = Math.ceil(this.pixelPos * this.minutesWidth / this.pixelWidth *\n          this.timeMultiplier);\n      this.forceUpdate();\n\n      // Plays de turn sound when appropiate\n      if (moveX > 0) {\n        this.lastTurnPos = posX;\n      }\n      if (posX - this.lastTurnPos < -this.turnSoundDist) {\n        if (this.pixelPos < this.pixelWidth) {\n          this.turnSound.play();\n        }\n        this.lastTurnPos = posX;\n      }\n    } else {\n      this.lastTurnPos = posX;\n    }\n    this.oldPosX = posX;\n  };\n\n  isDragging = false;\n  oldPosX = 0;\n  pixelWidth = 630;\n  minutesWidth = 25;\n  timeMultiplier = 1000 * 60;\n  pixelPos = this.pixelWidth;\n  timePos = this.minutesWidth * this.timeMultiplier;\n  isTickPlaying = false;\n  turnSoundDist = 25 / 2;\n  lastTurnPos = 0;\n  lastTick = Date.now();\n  paused = true;\n  mode = TomatoComponent.MODE_POMODORO;\n  showWhatIsPomodoroChip = true;\n  showWDontLockDeviceChip = true;\n  showWDontLockDeviceCard = false;\n\n  tickSound;\n  turnSound;\n  ringSound;\n\n  loadSounds() {\n    this.tickSound = new Howl({\n      src: ['sounds/pomodoro_tick.ogg', 'sounds/pomodoro_tick.mp3'],\n      loop: true,\n      volume: 0.5,\n    });\n\n    this.turnSound = new Howl({\n      src: ['sounds/pomodoro_turn.ogg', 'sounds/pomodoro_turn.mp3'],\n    });\n    this.ringSound = new Howl({\n      src: ['sounds/pomodoro_ring.ogg', 'sounds/pomodoro_ring.mp3'],\n      volume: 1.0,\n    });\n  }\n\n  doTick = () => {\n    setTimeout(this.doTick, 10); // the timer will continue running even if in the background\n\n    // Check time elapsed since last tick\n    const tickDuration = Date.now() - this.lastTick;\n    this.lastTick = Date.now();\n\n    // Check when the clock is not supposed to run\n    if (this.isDragging || this.timePos <= 0 || this.paused) {\n      if (this.isTickPlaying) {\n        this.tickSound.stop();\n        this.isTickPlaying = false;\n      }\n      return;\n    } // else the clock is runnin\n\n    if (!this.isTickPlaying) {\n      // Start playing the tick sound\n      if (this.tickSound && this.props.getConfig().tickSoundConfig !== '0') {\n        this.tickSound.volume(0.5);\n        this.tickSound.play();\n      }\n      this.isTickPlaying = true;\n    } else if (this.tickSound.volume() > 0 && this.props.getConfig().tickSoundConfig === '2') {\n      this.tickSound.volume(this.tickSound.volume() - 0.002); // Decreases tick volume over a few\n                                                              // seconds\n    }\n\n    // Reduce the remaining time in the clock down to 0\n    if (!this.paused) {\n      this.timePos -= tickDuration;\n    }\n    this.timePos = Math.max(0, Math.min(this.timePos, this.minutesWidth * this.timeMultiplier));\n\n    // Adjust the timeline position\n    this.pixelPos = this.timePos / this.minutesWidth * this.pixelWidth / this.timeMultiplier;\n    this.forceUpdate();\n\n    // Ring when the time reaches zero\n    if (this.timePos === 0) {\n      this.ringSound.stop().play();\n      this.paused = true;\n      this.forceUpdate();\n    }\n  };\n\n  jumpToMode = () => {\n    const setPos = (multiplier) => {\n      this.pixelPos = this.pixelWidth * multiplier;\n      this.timePos = this.minutesWidth * this.timeMultiplier * multiplier;\n    };\n    if (this.mode === TomatoComponent.MODE_SHORT_BREAK) { // 5 minutes\n      setPos(0.2);\n    } else if (this.mode === TomatoComponent.MODE_LONG_BREAK) { // 15 minutes\n      setPos(0.6);\n    } else { // 25 minutes, full clock\n      setPos(1);\n      this.mode = TomatoComponent.MODE_POMODORO;\n    }\n  };\n\n  selectMode = (mode) => {\n    this.mode = mode;\n    this.onStopClick();\n  };\n\n  hideHelpChip = () => {\n    this.showWhatIsPomodoroChip = false;\n    this.forceUpdate();\n  };\n\n  hideDontLockDeviceChip = () => {\n    this.showWDontLockDeviceChip = false;\n    this.forceUpdate();\n  };\n\n  showDontLockDeviceCard = () => {\n    this.showWDontLockDeviceChip = false;\n    this.showWDontLockDeviceCard = true;\n    this.forceUpdate();\n  };\n\n  hideDontLockDeviceCard = () => {\n    this.showWDontLockDeviceCard = false;\n    this.forceUpdate();\n  };\n\n  sendMail = () => {\n    window.open('mailto:jairo@jahdsoft.com');\n  };\n\n  render() {\n    return (\n        <Grid className=\"root\">\n          { this.showWhatIsPomodoroChip ?\n              <Cell col={12} className=\"mdl-typography--text-center\">\n                <Chip className=\"mdl-color--white\" onClose={this.hideHelpChip}>\n                  <a href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\" target=\"_blank\"\n                     className=\"mdl-color-text--black\"\n                  >\n                    What is the Pomodoro Technique?\n                  </a>\n                </Chip>\n              </Cell> : null }\n\n          { this.showWDontLockDeviceChip ?\n              <Cell col={12} className=\"mdl-typography--text-center\">\n                <Chip className=\"mdl-color--white\" onClose={this.hideDontLockDeviceChip}>\n                  <a href=\"#\"\n                     onClick={this.showDontLockDeviceCard}\n                     className=\"mdl-color-text--black\"\n                  >\n                    Don't lock your device. Why?\n                  </a>\n                </Chip>\n              </Cell> : null }\n\n          { this.showWDontLockDeviceCard ?\n              <Cell\n                  col={12}\n              >\n                <Card\n                    shadow={1}\n                    style={{ margin: 'auto' }}\n                >\n                  <CardTitle expand>\n                    <h4 style={{ marginTop: '0' }}>\n                      Modern mobile operating systems will stop background JavaScript code while locked.\n                      Thus, if locked, the timer will stop running. Please don't lock your device. This\n                      issue does not occur in native builds. A native build for Android and, maybe, iOS,\n                      may be released soon, if users, like you, are interested.\n                    </h4>\n                  </CardTitle>\n                  <CardActions border>\n                    <Button\n                        colored\n                        onClick={this.hideDontLockDeviceCard}\n                    >\n                      OK\n                    </Button>\n                    <Button\n                        colored\n                        onClick={this.sendMail}\n                    >Email me</Button>\n                  </CardActions>\n                </Card>\n              </Cell>\n              : null }\n\n          <Cell\n              col={12}\n              className=\"main\"\n              onMouseMove={this.onMouseMove}\n              onMouseUp={this.onMouseUp}\n              onTouchMove={this.onMouseMove}\n              onTouchEnd={this.onMouseUp}\n              ref=\"main\"\n          >\n            <svg style={{ display: 'none' }}>\n              <defs>\n                <path\n                    id=\"stempath\"\n                    d=\"M45.263 56.325c-4.153 2.877-8.688 3.997-13.684 2.947-6.75-1.42-12.658-.133-17.343\n                5.274-.444.513-1.154.795-1.945.841 8.279-12.713 19.369-20.347\n                35.181-19.185-1.142-4.912-2.697-9.386-8.229-10.989 8.393-2.329 14.908.648 20.39\n                6.482 4.967-3.077 7.65-6.526 12.7-16.222 2.45 6.292 1.399 11.899-3.969 20.682 3.378\n                1.556 6.882 2.05 10.168.448 3.099-1.51 5.857-3.72 9.176-5.891-1.793 6.643-5.919\n                10.74-11.471 13.709-5.747 3.074-11.571 1.879-16.764.42l-9.355\n                19.685c-4.165-4.978-4.672-11.17-4.276-17.6l.219-.991-.798.39z\"\n                />\n              </defs>\n            </svg>\n            <svg\n                className=\"stem\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 100 100\"\n            >\n              <use xlinkHref=\"#stempath\" />\n            </svg>\n            <div className=\"tomato\"\n                 ref=\"tomato\"\n                 onMouseDown={this.onMouseDown}\n                 onTouchStart={this.onMouseDown}\n            >\n              <div\n                  className=\"timeline\"\n                  ref=\"timeline\"\n                  style={{ transform: `translateX(-${this.pixelPos}px)` }}\n              />\n            </div>\n          </Cell>\n\n          <Cell col={12}>\n            <div className=\"controls\">\n              <FABButton\n                  ripple\n                  className=\"mdl-color--white\"\n                  onClick={this.onStopClick}\n              >\n                <Icon name=\"stop\" />\n              </FABButton>\n              <FABButton\n                  ripple\n                  className=\"mdl-color--white\"\n                  style={{ float: 'right' }}\n                  onClick={this.onPlayPauseClick}\n              >\n                <Icon name={this.paused ? 'play_arrow' : 'pause'} />\n              </FABButton>\n            </div>\n          </Cell>\n\n          <Cell\n              col={12}\n              className=\"mdl-typography--text-center\"\n          >\n            <Button\n                className={this.mode === TomatoComponent.MODE_POMODORO ? 'mdl-color-text--white' : null}\n                onClick={() => this.selectMode(TomatoComponent.MODE_POMODORO)}\n                ripple\n            >\n              Pomodoro\n            </Button>\n            <Button\n                className={this.mode === TomatoComponent.MODE_SHORT_BREAK ? 'mdl-color-text--white' : null}\n                onClick={() => this.selectMode(TomatoComponent.MODE_SHORT_BREAK)}\n                ripple\n            >\n              Short Break\n            </Button>\n            <Button\n                className={this.mode === TomatoComponent.MODE_LONG_BREAK ? 'mdl-color-text--white' : null}\n                onClick={() => this.selectMode(TomatoComponent.MODE_LONG_BREAK)}\n                ripple\n            >\n              Long Break\n            </Button>\n          </Cell>\n        </Grid>\n    );\n  }\n\n}\n\nexport default TomatoComponent;\n","/**\n * Copyright © 2017 Jairo Honorio. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport emptyFunction from 'fbjs/lib/emptyFunction';\nimport s from './App.scss';\nimport TomatoComponent from '../TomatoComponent/Tomato';\nimport {\n    Grid,\n    Cell,\n    Layout,\n    Navigation,\n    Header,\n    Content,\n    Icon,\n    Drawer,\n    Button,\n    RadioGroup,\n    Radio,\n} from 'react-mdl';\nimport {version} from './../../package.json';\nimport {\n    FacebookShareButton,\n    LinkedinShareButton,\n    TwitterShareButton,\n    TelegramShareButton,\n    WhatsappShareButton,\n    PinterestShareButton,\n    RedditShareButton,\n    EmailShareButton,\n    FacebookIcon,\n    TwitterIcon,\n    TelegramIcon,\n    WhatsappIcon,\n    LinkedinIcon,\n    PinterestIcon,\n    RedditIcon,\n    EmailIcon\n} from 'react-share';\n\nclass App extends Component {\n\n    static propTypes = {\n        context: PropTypes.shape({\n            onSetTitle: PropTypes.func,\n            onSetMeta: PropTypes.func,\n            onPageNotFound: PropTypes.func,\n        }),\n        error: PropTypes.object,\n    };\n\n    static childContextTypes = {\n        onSetTitle: PropTypes.func.isRequired,\n        onSetMeta: PropTypes.func.isRequired,\n        onPageNotFound: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            tickSoundConfig: '2',\n        };\n    }\n\n    getChildContext() {\n        const context = this.context;\n        return {\n            onSetTitle: context.onSetTitle || emptyFunction,\n            onSetMeta: context.onSetMeta || emptyFunction,\n            onPageNotFound: context.onPageNotFound || emptyFunction,\n        };\n    }\n\n    onTickSoundConfigChange = (e) => {\n        this.setState({tickSoundConfig: e.target.value});\n    };\n\n    onGetConfig = () => ({\n        tickSoundConfig: this.state.tickSoundConfig,\n    });\n\n    handleToggleDialog = () => {\n        this.setState({openDialog: !this.state.openDialog});\n    };\n\n    handleCloseDialog = () => {\n        this.setState({openDialog: false});\n    };\n\n    render() {\n        const shareUrl = 'http://zen.jahdsoft.com/';\n\n        return !this.props.error ? (\n            <div>\n                <Layout fixedDrawer>\n                    <Header transparent/>\n                    <Drawer className=\"drawer\">\n                        <Grid\n                            shadow={1}\n                            style={{margin: '0'}}\n                        >\n                            <Cell col={12}>\n                                <h1>Zen Pomodoro</h1>\n                            </Cell>\n                            <Cell col={8}>\n                                <div>\n                                    by Jairo Honorio\n                                </div>\n                                <div className=\"mdl-color-text--grey\">\n                                    version {version}\n                                </div>\n                            </Cell>\n                            <Cell col={4}>\n                                <Button\n                                    ripple\n                                    onClick={this.handleToggleDialog}\n                                >\n                                    <Icon name=\"settings\"/>\n                                </Button>\n                            </Cell>\n                            {this.state.openDialog ?\n                                <Cell col={12}>\n                                    <Grid\n                                        shadow={1}\n                                        style={{margin: '0'}}\n                                    >\n                                        <Cell col={6}>\n                                            Tick sound\n                                        </Cell>\n                                        <Cell col={6}>\n                                            <RadioGroup\n                                                name=\"tickSoundConfig\"\n                                                value={this.state.tickSoundConfig}\n                                                childContainer=\"div\"\n                                                onChange={this.onTickSoundConfigChange}\n                                            >\n                                                <Radio\n                                                    value=\"2\"\n                                                    ripple\n                                                >\n                                                    Starting\n                                                </Radio>\n                                                <Radio\n                                                    value=\"1\"\n                                                    ripple\n                                                >\n                                                    On\n                                                </Radio>\n                                                <Radio\n                                                    value=\"0\"\n                                                    ripple\n                                                >\n                                                    Off\n                                                </Radio>\n                                            </RadioGroup>\n                                        </Cell>\n                                    </Grid>\n                                </Cell>\n                                : null}\n                        </Grid>\n\n                        <Navigation>\n                            <a\n                                href=\"https://github.com/jahd2602/zen-pomodoro\"\n                                target=\"blank\"\n                            >\n                                <Icon name=\"code\"/> Code on Github\n                            </a>\n                            <a\n                                href=\"https://pe.linkedin.com/in/jairohonorio\"\n                                target=\"blank\"\n                            >\n                                <Icon name=\"portrait\"/> My LinkedIn\n                            </a>\n                            <a\n                                href=\"mailto:jairo@jahdsoft.com\"\n                                target=\"blank\"\n                            >\n                                <Icon name=\"email\"/> Email me\n                            </a>\n                        </Navigation>\n\n                        <Grid\n                            shadow={1}\n                            className=\"socialContainer\"\n                        >\n                            <h2>Social Share</h2>\n                            <Cell col={6}>\n                                <FacebookShareButton url={shareUrl}>\n                                    <FacebookIcon round/>\n                                </FacebookShareButton>\n                            </Cell>\n\n                            <Cell col={6}>\n                                <TwitterShareButton url={shareUrl}>\n                                    <TwitterIcon round/>\n                                </TwitterShareButton>\n                            </Cell>\n\n                            <Cell col={6}>\n                                <LinkedinShareButton url={shareUrl}>\n                                    <LinkedinIcon round/>\n                                </LinkedinShareButton>\n                            </Cell>\n\n                            <Cell col={6}>\n                                <WhatsappShareButton url={shareUrl}>\n                                    <WhatsappIcon round/>\n                                </WhatsappShareButton>\n                            </Cell>\n\n                            <Cell col={6}>\n                                <TelegramShareButton url={shareUrl}>\n                                    <TelegramIcon round/>\n                                </TelegramShareButton>\n                            </Cell>\n\n                            <Cell col={6}>\n                                <RedditShareButton url={shareUrl}>\n                                    <RedditIcon round/>\n                                </RedditShareButton>\n                            </Cell>\n\n                            <Cell col={6}>\n                                <PinterestShareButton\n                                    url={shareUrl}\n                                    media=\"http://zen.jahdsoft.com/images/screenshot.png\"\n                                >\n                                    <PinterestIcon round/>\n                                </PinterestShareButton>\n                            </Cell>\n\n                            <Cell col={6}>\n                                <EmailShareButton url={shareUrl}>\n                                    <EmailIcon round/>\n                                </EmailShareButton>\n                            </Cell>\n                        </Grid>\n                    </Drawer>\n                    <Content>\n                        <TomatoComponent getConfig={this.onGetConfig}/>\n                    </Content>\n                </Layout>\n            </div>\n        ) : <div>ERROR</div>;\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './AppComponent/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}